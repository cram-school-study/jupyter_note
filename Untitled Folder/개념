* EJB - 
* J2EE - 
* JPA -
* 하이버네이트 -
* OSI 7계층 -> TCP - 4계층, IP - 1,2,3계층
* RESTful api - 
* CRUD - 

스프링 프레임워크
핵심 기술 - 스프링 DI 컨테이너, AOP, 이벤트, 기타 
웹 기술 - 스프링 MVC, 스프링 WebFlux
데이터 접근 기술 - 트랜잭션, JDBC, ORM 지원, XML 지원
기술 통합 - 캐시, 이메일, 원격접근, 스케줄링
테스트 - 스프링 기반 테스트 지원
언어 - 코틀린, 그루비
최근에는 스프링부트를 통해서 스프링 프레임워크의 기술들을 편리하게 사용

* DI - Denpendency Injection - 의존성 관계

SOLID
- 클린코드로 유명한 로버트 마틴이 좋은 객체 지향 설계의 5가지 원칙을 정리
- SRP - 단일 책임 원칙
- OCP - 개방 폐쇄 원칙
- LSP - 리스코프 치환 원칙
- ISP - 인터페이스 분리 원칙
- DIP - 의존관계 역전 원칙
* DIP 위배란?

애자일 소프트웨어 - 

@beforeach - 

스프링 입문 전 자바코드로 DB, APPCONFIG 방식으로 소스 구현 해본 결과
-> 프로그래머는 추상화에 의존해야지 구체화에 의존하면 안된다. 의존성 주입은 이 원칙을 따르는 방법 중 하나이다.
-> di - 의존성 주입 - 생성자 