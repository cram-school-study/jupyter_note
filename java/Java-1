Java 설치

1. java jdk 11 LTS 버전 설치
2. java api download - 8 kit 설치

수업

1. literal
2. container - string,list tuple, dic, set
3. function
4. class
True/false



1. 문자 - char
2. 숫자 - 정수 - byte, short, int ,long
        - 실수 - float, double
3. 논리 - boolean
true/false

기본형(private 타입)
8개, 실제값을 저장

참조형
string, 객체의 주소 저장 
64비트의 경우 참조형의 크기는 8바이트

* long을 넘는 단위를 사용할 경우 따로 툴을 사서 써야함 (big integer)


1. 대소문자 구분되며 길이에 제한이 없다.
2. 예약어를 사용해서는 안딘다
3. 숫자로 시작해서는 안된다.
4. 특수문자는 '_' 와 '$' 만을 허용한다.

1. 클래스 이름의 첫 글자는 항상 대문자로 한다.
2. 여러 단어 이름은 단어의 첫글자를 대문자로 한다.
3. 상수의 이름은 대문자로 한다. 단어는 _로 구분한다.

변수 - 하나의 값을 저장하기 위한 공간
상수 - 한번만 값을 저장할 수 있는 공간
리터럴 - 그 자체로 값을 의미하는 것

리터럴과 접미사

변수의 초기화 - 변수에 처음으로 값을 저장하는 것
*지역변수는 사용하기 전에 반드시 초기화해주어야 한다.
* boolean = false
클래스 변수 - cv - class value
로컬 변수 lv - local value

char a = ''; <- 에러남

형변환

Math.pow(double(), double(제곱수)) -  해당 제곱

지시자

%g - 반올림
%f - 소수점 아래 6자리
%e - 지수형식

printf의 지시자 - %숫자 사용시 위치조절

연산자 - operator

단항연산자
이항연산자 - 산술, 비교, 논리
삼항 연산자
대입 연산자 - ^(XOR - 익스크루시브??) - 같은거 0

연산자 주의사항
* 시프트연산자는 덧셈보다 우선순위가 낮다.
* and 연산자는 우선순위가 or보다 높다


byte + byte = byte 에러??
            -> int임
            
            
이항연산자의 특징
쿠버네티스? docker의 연관?



os  os os os 
하이퍼바이저
os
-> vmware, virtual box 등등의 가상화 모듈 방식


컨테이너
docker
하이퍼바이저
os
-> wsl 등의 가상화 운영방식

!!!


* XOR - 빅데이터 연관 상식 문제 - 면접으로 가끔 나옴
* 비트 마스크 - 마스크 연산자의 뜻



이름붙은 반복문과 break, continue

Loop: for문
        for문
            break Loop;
            
-> 평소의 break와 다르게 해당 명명된 Loop까지 빠져나감


* for문을 돌릴시에 반복횟수가 적은게 바깥쪽에 위치한게 더 빠르다.
 -> 일반 그냥 숫자연산시에는 큰 차이가 없지만, new 연산자가 수행할시에는 속도가 바깥쪽이 작은게 더 빠르다. 이유는 모르겠음.
 
* 향상된 for문은 일반 for문에 비해서 인덱스를 구하지않기때문에 전체를 돌릴때 좋다.
 -> 인덱스가 필요하지않은 상황이라면 향상된 for문이 나을것같다. (가독성)
 -> iterator 방법과 유자사하다.
 -> 속도차이는 모르겠다.
 
* 향상된 for문 == for each문







